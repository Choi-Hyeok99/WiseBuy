version: '3.8'

services:
  microservices_db:
    image: mysql:8.0.36
    container_name: microservices_db
    ports:
      - "3310:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_microservices_data:/var/lib/mysql
    networks:
      - my_network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s




  redis:
    image: redis:latest
    container_name: haengye_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - my_network

  haengye_project:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: haengye_project
    ports:
      - "8090:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://microservices_db:3306/microservices_db
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
#      SPRING_REDIS_HOST: haengye_redis
#      SPRING_REDIS_PORT: 6379
#      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - microservices_db
#      - redis
    command: [ "./wait-for-it.sh", "mysql:3306", "--", "java", "-jar", "/app/haengye_project.jar" ]
    restart: always
    networks:
      - my_network

volumes:
  mysql_microservices_data:
  redis_data:


networks:
  my_network:

